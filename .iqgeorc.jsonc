{
    "name": "my_project",
    // Dev Container display name
    "display_name": "Project for customer MyProject",
    // Prefix to use in container names and Docker compose
    "prefix": "myproj",
    // The name of the database to use. (Should be different from "iqgeo" so myw_db can drop it - uses iqgeo user for connection)
    "db_name": "myproj",
    "platform": {
        // The version of the IQGeo platform to use. Options are 7.0, and above
        "version": "7.2",

        // Dependency Options: ["memcached", "redis", "ldap", "saml", "oidc", "jwt"]
        // Please refer to the platform `Install & Configuration Guide` for more information regarding these dependencies.
        // Default: ["redis", "oidc"] both for Keycloak authentication over OIDC and Redis for session management and Task Queue
        // Note that you always need to have either memcached or redis - the docker-compose is pre-configured to use memcached but you may want to switch to redis if that is what will be used in production

        // Dev environment optional dependencies
        "devenv": ["redis", "oidc"],
        // Optional dependencies for deployment environment application server
        "appserver": ["redis", "oidc"],
        // Optional dependencies for deployment tools image
        "tools": ["redis"]
    },
    // Modules to be included in the project
    "modules": [
        // each entry must have:
        // {string} name: the name of the module. Should match the folder name as it exists in the modules directory and the injector image name if a product module.
        //                  Available product modules, versions, and their required dependencies: https://github.com/IQGeo/utils-project-template/wiki/Module-dependencies
        // {string}  [version]: the version of the module to use. If not provided, the corresponding folder needs to exist in the repository with a IQGeo module structure
        // {boolean} [devOnly=false]: if true, the module is only included in the development environment. e.g. a dev database module
        // {string}  [devSrc]: (product modules only) relative path to the source code for the module in the development environment
        // {boolean} [dbInit]: (default true for product modules) if false, skips creating a schema initialisation step in the 600_init_db.sh script
        {
            // remove this entry if the repository does not contain a 'custom` module
            "name": "custom"
        },
        {
            "name": "comms",
            "version": "3.2"
        }
    ],

    // (relative) path of files to exclude from pulling and updating
    // e.g. [".devcontainer/remote_host"]
    "exclude_file_paths": [],

    "version": "0.5.0"
}
