services:
    postgis:
        image: ghcr.io/iqgeo/docker-postgis/postgis:15-3.5
        container_name: postgis_${PROJ_PREFIX:-myproj}
        restart: always
        command: |
            postgres 
            -c wal_level=logical 
            -c max_wal_senders=1 
            -c max_replication_slots=1
        environment:
            PGDATA: /opt/iqgeo/data/pgdata
            POSTGRES_USER: ${DB_USERNAME:-iqgeo}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
        ports:
            - '5432:5432'
        volumes:
            - pgdata-example:/opt/iqgeo/data/pgdata

    iqgeo-worker:
        build:
            context: ./
            dockerfile: dockerfile.tools
            args:
                - PRODUCT_REGISTRY=${PRODUCT_REGISTRY:-harbor.delivery.iqgeo.cloud/releases_}
        image: iqgeo-${PROJ_PREFIX:-myproj}-tools:latest
        container_name: iqgeo_${PROJ_PREFIX:-myproj}_worker
        restart: always
        depends_on:
            - postgis
            - redis
        environment:
            PGHOST: ${DB_HOST:-postgis}
            PGPORT: 5432
            PGUSER: ${DB_USERNAME:-iqgeo}
            PGPASSWORD: ${DB_PASSWORD:-password}
            MYW_DB_NAME: ${MYW_DB_NAME:-myproj}
            MYW_DB_HOST: ${DB_HOST:-postgis}
            MYW_DB_PORT: 5432
            MYW_DB_USERNAME: ${DB_USERNAME:-iqgeo}
            MYW_DB_PASSWORD: ${DB_PASSWORD:-password}
            SQLALCHEMY_URL: postgresql://${DB_USERNAME:-iqgeo}:${DB_PASSWORD:-password}@${DB_HOST:-postgis}:5432/${MYW_DB_NAME:-myproj}
            RQ_REDIS_URL: ${REDIS_URL:-redis://:password@redis:6379}
            MYW_TASK_WORKERS: ${MYW_TASK_WORKERS:-1}
            MYW_TASK_QUEUES: ${MYW_TASK_QUEUES:-}
            # START CUSTOM SECTION
            # END CUSTOM SECTION

    iqgeo:
        build:
            context: ./
            dockerfile: dockerfile.appserver
            args:
                - PRODUCT_REGISTRY=${PRODUCT_REGISTRY:-harbor.delivery.iqgeo.cloud/releases_}
        image: iqgeo-${PROJ_PREFIX:-myproj}-appserver:latest
        container_name: iqgeo_${PROJ_PREFIX:-myproj}_appserver
        restart: always
        depends_on:
            - postgis
            - keycloak
            - redis
        environment:
            ALLOW_HTTP: 'YES' # only for local testing. do not include in production or exposed environments!
            WSGI_PROCESSES: 2
            WSGI_THREADS: 4
            PGHOST: ${DB_HOST:-postgis}
            PGPORT: 5432
            PGUSER: ${DB_USERNAME:-iqgeo}
            PGPASSWORD: ${DB_PASSWORD:-password}
            MYW_DB_NAME: ${MYW_DB_NAME:-myproj}
            MYW_DB_HOST: ${DB_HOST:-postgis}
            MYW_DB_PORT: 5432
            MYW_DB_USERNAME: ${DB_USERNAME:-iqgeo}
            MYW_DB_PASSWORD: ${DB_PASSWORD:-password}
            BEAKER_SESSION_TYPE: ${BEAKER_SESSION_TYPE:-ext:redis}
            BEAKER_SESSION_URL: ${BEAKER_SESSION_URL:-redis://:password@redis:6379/0}
            IQGEO_HOST: ${IQGEO_HOST:-localhost}
            KEYCLOAK_URL: ${KC_PROTOCOL:-http://}${KEYCLOAK_HOST:-keycloak.local}:${KEYCLOAK_PORT:-8080}
            MYW_EXT_BASE_URL: http://${IQGEO_HOST:-localhost} # for access from other devices (e.g. iPad running anywhere)
            # START CUSTOM SECTION
            # END CUSTOM SECTION
        ports:
            - ${APPSERVER_PORT:-80}:8080

    keycloak:
        container_name: keycloak_${PROJ_PREFIX:-myproj}
        image: ghcr.io/iqgeo/utils-keycloak-iqgeo/keycloak:latest
        restart: always
        command: start-dev --import-realm
        environment:
            KC_HOSTNAME: ${KEYCLOAK_HOST:-keycloak.local}
            KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-8080}
            KC_HTTP_PORT: ${KEYCLOAK_PORT:-8080}
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: _mywWorld_
            KC_PROXY: edge
            IQGEO_DOMAIN: http://${SERVER_NAME-localhost}:${APPSERVER_PORT:-80}
            IQGEO_CLIENT_SECRET: qpyu1mCm8zvvKTXRnKxwap1A6xMChuY6
        ports:
            - ${KC_HTTPS_PORT:-8443}:${KC_HTTPS_PORT:-8443}
            - ${KEYCLOAK_PORT:-8080}:${KEYCLOAK_PORT:-8080}
        networks:
            default:
                aliases:
                    - keycloak.local

    redis:
        container_name: redis_${PROJ_PREFIX:-myproj}
        image: redis:latest
        restart: always
        command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    # START CUSTOM SECTION
    # END CUSTOM SECTION

    kafka:
        extends:
            file: ./kafka/docker-compose-kafka.yml
            service: kafka
        container_name: kafka_${PROJ_PREFIX:-myproj}
        ports:
            - ${KAFKA_PORT:-9092}:9092

    debezium:
        extends:
            file: ./kafka/docker-compose-kafka.yml
            service: debezium
        container_name: debezium_${PROJ_PREFIX:-myproj}
        depends_on:
            - kafka
            - postgis
        ports:
            - ${DEBEZIUM_PORT:-8083}:8083

    # Connector configuration service
    connector-setup:
        image: curlimages/curl:latest
        container_name: connector-setup
        environment:
            KAFKA_CONNECT_URL: http://debezium:8083
            CONNECTOR_NAME: iqgeo-connector
            POSTGRES_HOST: ${DB_HOST:-postgis}
            POSTGRES_PORT: 5432
            POSTGRES_DB: ${MYW_DB_NAME:-myproj}
            POSTGRES_USER: ${DB_USERNAME:-iqgeo}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
            # DATABASE_SERVER_NAME: inventory-db
            TOPIC_PREFIX: iqgeo
            TABLE_INCLUDE_LIST: data.note
            MAX_RETRIES: 30
            RETRY_INTERVAL: 10
            DELETE_EXISTING: 'true'
        volumes:
            - ./kafka/configure-debezium.sh:/scripts/configure-debezium.sh
            # - ./connectors:/connectors
        depends_on:
            debezium:
                condition: service_healthy
        command: ['/scripts/configure-debezium.sh']
        restart: 'no'

    kafka-ui:
        extends:
            file: ./kafka/docker-compose-kafka.yml
            service: kafka-ui
        container_name: kafka-ui_${PROJ_PREFIX:-myproj}
        depends_on:
            - kafka
            - debezium
        ports:
            - ${KAFKA_UI_PORT:-8060}:8080

volumes:
    pgdata-example:
        name: ${PROJ_PREFIX:-myproj}_pgdata-example15
        # START CUSTOM SECTION
        # END CUSTOM SECTION
    kafka_data:
        name: ${PROJ_PREFIX:-myproj}_kafka_data
